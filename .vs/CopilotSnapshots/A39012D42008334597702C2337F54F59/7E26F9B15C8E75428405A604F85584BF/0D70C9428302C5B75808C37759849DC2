using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;

namespace EmployeeManagementSystem
{
    public partial class AddEmployee : UserControl
    {
        SqlConnection connect = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString);

        public AddEmployee()
        {
            InitializeComponent();
            displayEmployeeData();
        }

        public void RefreshData()
        {
            if (InvokeRequired)
            {
                Invoke((MethodInvoker)RefreshData);
                return;
            }
            displayEmployeeData();
        }

        public void displayEmployeeData()
        {
            List<EmployeeData> listData = employeeListData();
            dataGridView1.DataSource = listData;
        }

        public List<EmployeeData> employeeListData()
        {
            List<EmployeeData> listdata = new List<EmployeeData>();

            try
            {
                if (connect.State != ConnectionState.Open)
                    connect.Open();

                string selectData = "SELECT * FROM employees WHERE delete_date IS NULL";

                using (SqlCommand cmd = new SqlCommand(selectData, connect))
                {
                    SqlDataReader reader = cmd.ExecuteReader();

                    while (reader.Read())
                    {
                        EmployeeData ed = new EmployeeData();
                        ed.ID = reader["id"] != DBNull.Value ? Convert.ToInt32(reader["id"]) : 0;
                        ed.Name = reader["full_name"]?.ToString();
                        listdata.Add(ed);
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error fetching data: " + ex.Message);
            }

            return listdata;
        }

        private void addEmployee_addBtn_Click(object sender, EventArgs e)
        {
            try
            {
                if (connect.State != ConnectionState.Open)
                    connect.Open();

                string insertQuery = "INSERT INTO employees (full_name, date_insert) VALUES (@name, @date)";
                using (SqlCommand cmd = new SqlCommand(insertQuery, connect))
                {
                    cmd.Parameters.AddWithValue("@name", addEmployee_name.Text.Trim());
                    cmd.Parameters.AddWithValue("@date", DateTime.Now);
                    cmd.ExecuteNonQuery();
                }

                MessageBox.Show("Employee added.");
                displayEmployeeData();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Insert Error: " + ex.Message);
            }
            finally
            {
                connect.Close();
            }
        }

        private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0)
            {
                DataGridViewRow row = dataGridView1.Rows[e.RowIndex];
                addEmployee_name.Text = row.Cells["Name"].Value.ToString();
            }
        }

        private void addEmployee_clearBtn_Click(object sender, EventArgs e)
        {
            addEmployee_name.Clear();
        }

        private void addEmployee_deleteBtn_Click(object sender, EventArgs e)
        {
            // Assuming employee ID is retrieved from selection
            MessageBox.Show("Delete functionality not implemented yet.");
        }

        private void addEmployee_updateBtn_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Update functionality not implemented yet.");
        }

        private void addEmployee_importBtn_Click(object sender, EventArgs e)
        {
            OpenFileDialog ofd = new OpenFileDialog();
            if (ofd.ShowDialog() == DialogResult.OK)
            {
                // Placeholder
            }
        }
    }

    public class EmployeeData
    {
        public int ID { get; set; }
        public string Name { get; set; }

        public List<EmployeeData> employeeListData()
        {
            return new List<EmployeeData>(); // Placeholder
        }
    }
}
